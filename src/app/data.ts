interface Video {
  id: string;
  title: string;
  date: string;
  typeId: number;
}

interface Song {
  title: string;
  artistId: number;
  genreId: number;
}

interface Genre {
  name: string;
}

interface Artist {
  name: string;
}

interface Type {
  name: string;
}

export class Singing {
  id: number;
  videoId: number;
  songId: number;
  start: number;
  withInst: boolean;
  full: boolean;

  constructor(id: number, videoId: number, songId: number, start: number, withInst = true, full = true) {
    this.id = id;
    this.videoId = videoId;
    this.songId = songId;
    this.start = start;
    this.withInst = withInst;
    this.full = full;
  }
}

export const videos: Video[] = [
  { // 0
    id: 'PuFk_XfNXiM',
    title: 'POLKA♡SUMMER♡LIVE☆2020 #ぽるうた【ホロライブ/尾丸ポルカ】',
    date: '2020/08/30',
    typeId: 1,
  },
  { // 1
    id: 'd0oDMXWMs8o',
    title: 'HOLOGRAM CIRCUS - 尾丸ポルカ (short ver.)',
    date: '2020/08/16',
    typeId: 3,
  },
  { // 2
    id: 'IixAr5W3TIc',
    title: '【おちゃめ機能】ほろふぁいぶが吹っ切れた【5人で歌ってみた】',
    date: '2020/08/16',
    typeId: 0,
  },
  { // 3
    id: 'Eq_LQukPyqE',
    title: 'Reach Out To The Truth',
    date: '2020/09/10',
    typeId: 4,
  },
  { // 4
    id: 'yzEogcLd4ac',
    title: 'インドア系ならトラックメイカー',
    date: '2020/09/12',
    typeId: 4,
  },
  { // 5
    id: 'KQvHEo_dazE',
    title: 'Tulip',
    date: '2020/09/22',
    typeId: 4,
  },
  { // 6
    id: 'fz0SCIPbKhw',
    title: '駄目よ！20時にポルカの1ヶ月配信があるの！【ホロライブ/尾丸ポルカ】',
    date: '2020/09/16',
    typeId: 5,
  },
  { // 7
    id: '-79A0I8_2vw',
    title: 'POLKA●SEPTEMBER●LIVE⇔2020 #ぽるうた【ホロライブ/尾丸ポルカ】',
    date: '2020/09/25',
    typeId: 1,
  },
  { // 8
    id: 'Es2ZdDDxS1s',
    title: '早起きは三文の歌枠しっとり～♪【ホロライブ/尾丸ポルカ】',
    date: '2020/10/11',
    typeId: 2,
  },
  { // 9
    id: 'jPxfqgAkGMM',
    title: 'ごめん、歌います【ホロライブ/尾丸ポルカ】',
    date: '2020/10/13',
    typeId: 2,
  },
  { // 10
    id: 'jqyinvEhLdg',
    title: '味をしめた者の朝歌枠ゲリラ【ホロライブ/尾丸ポルカ】',
    date: '2020/10/20',
    typeId: 2,
  },
  { // 11
    id: 'f1sG1ffExJc',
    title: 'ポルカじゃない人の朝歌ゲリラ【ホロライブ/尾丸ポルカ】',
    date: '2020/10/22',
    typeId: 2,
  },
  { // 12
    id: 'sqrobkkImgg',
    title: '酔いどれポルカのアイカツ！語り～アカペラもあるｙｐ～【ホロライブ/尾丸ポルカ】',
    date: '2020/10/28',
    typeId: 5,
  },
  { // 13
    id: 'ZJRYxAbB96Q',
    title: 'POLKA◆October◆LIVE◆2020 #ぽるうた 【ホロライブ/尾丸ポルカ】',
    date: '2020/10/30',
    typeId: 1,
  },
  { // 14
    id: 'CrbMV64PmPU',
    title: '【ホロライブ】さぷらいずぱらだいす！【どっきりラビリンス】',
    date: '2020/10/31',
    typeId: 3,
  },
  { // 15
    id: 'xrDuwnQlxLc',
    title: 'ポルカが気圧を倒す時に始まる歌枠【ホロライブ/尾丸ポルカ】',
    date: '2020/11/03',
    typeId: 2,
  },
  { // 16
    id: 'UeTl2y9Vqg8',
    title: '30万人に聞かせるリクエストボイス【ホロライブ/尾丸ポルカ】',
    date: '2020/10/12',
    typeId: 5,
  },
  { // 17
    id: 'oK35hzQRrMQ',
    title: '寝具 a song【尾丸ポルカ/ホロライブ】',
    date: '2020/11/14',
    typeId: 2,
  },
  { // 18
    id: 'ekFreTJ3xx8',
    title: '戯画「ガラス姫と鏡の従者」オープニングムービー',
    date: '2020/11/13',
    typeId: 3,
  },
  { // 19
    id: 'lyX7v3FlitQ',
    title: '楽しみすぎて穏やかじゃない【ホロライブ/尾丸ポルカ】',
    date: '2020/11/21',
    typeId: 5,
  },
  { // 20
    id: 'l1uB8w7e0SA',
    title: 'POLKA≡November≡LIVE≡2020 #ぽるうた【尾丸ポルカ/ホロライブ】',
    date: '2020/11/28',
    typeId: 1,
  },
  { // 21
    id: 'yEttl2nfhsQ',
    title: 'アカペラで 狂乱戦記～日常ノ神サマ～【尾丸ポルカ/ホロライブ】',
    date: '2020/12/09',
    typeId: 5,
  },
  { // 22
    id: 'ZN9HLAYvmdI',
    title: '歌で銀河が救えるわけないでしょ【尾丸ポルカ/ホロライブ】',
    date: '2020/12/10',
    typeId: 2,
  },
  { // 23
    id: 'c_ss-YVM82E',
    title: 'いつものカラオケ #気圧敗北部【尾丸ポルカ/ホロライブ】',
    date: '2020/12/19',
    typeId: 2,
  },
  { // 24
    id: '3qkXc6zheig',
    title: '【オリジナル曲】『BLUE CLAPPER』試聴動画 【雪花ラミィ, 桃鈴ねね, 獅白ぼたん, 尾丸ポルカ】',
    date: '2020/12/23',
    typeId: 3,
  },
  { // 25
    id: 'pnGTk-gbqF4',
    title: 'All Night Polka Party【尾丸ポルカ/ホロライブ】',
    date: '2020/12/25',
    typeId: 2,
  },
  { // 26
    id: '_cp8KqmStOA',
    title: '【#ホロライブクリスマス】🌊⛱皆で満喫しちゃうクリスマスリレー😎🏖【尾丸ポルカ/ホロライブ】',
    date: '2020/12/25',
    typeId: 2,
  },
  { // 27
    id: 'LQ_eazT56FA',
    title: '【ORIGINAL SONG+MV】HOLOGRAM CIRCUS - Omaru Polka【尾丸ポルカ/ホロライブ】',
    date: '2020/12/26',
    typeId: 3,
  },
  { // 28
    id: '8KgFVpzjRrg',
    title: 'POLKA▲December▲LIVE▲2020 #ぽるうた 【ホロライブ/尾丸ポルカ】',
    date: '2020/12/29',
    typeId: 1,
  },
]

export const types: Type[] = [
  /* 0 */ { name: '歌ってみた' },
  /* 1 */ { name: 'ライブ' },
  /* 2 */ { name: '歌枠' },
  /* 3 */ { name: 'オリジナル' },
  /* 4 */ { name: 'GB' },
  /* 5 */ { name: 'その他' },
]

export const songs: Song[] = [
  /*  0 */ { title: 'HOLOGRAM CIRCUS', artistId: 0, genreId: 0 },
  /*  1 */ { title: 'only my railgun', artistId: 1, genreId: 1 },
  /*  2 */ { title: 'Unmei♪wa♪Endless!', artistId: 2, genreId: 1 },
  /*  3 */ { title: 'Chai Maxx', artistId: 3, genreId: 2 },
  /*  4 */ { title: 'おジャ魔女カーニバル!!', artistId: 4, genreId: 1 },
  /*  5 */ { title: '空色デイズ', artistId: 5, genreId: 1 },
  /*  6 */ { title: 'ようこそジャパリパークへ', artistId: 6, genreId: 1 },
  /*  7 */ { title: 'おちゃめ機能', artistId: 7, genreId: 3 },
  /*  8 */ { title: 'Reach Out To The Truth', artistId: 8, genreId: 5 },
  /*  9 */ { title: 'インドア系ならトラックメイカー', artistId: 9, genreId: 6 },
  /* 10 */ { title: 'Tulip', artistId: 10, genreId: 7 },
  /* 11 */ { title: '地上の星', artistId: 11, genreId: 4 },
  /* 12 */ { title: '卒業写真', artistId: 12, genreId: 4 },
  /* 13 */ { title: '旅立ちの日に', artistId: -1, genreId: 8 }, // artist: null
  /* 14 */ { title: 'GO!GO!MANIAC', artistId: 2, genreId: 1 },
  /* 15 */ { title: 'Q&A リサイタル!', artistId: 13, genreId: 1 },
  /* 16 */ { title: 'サラバ、愛しき悲しみたちよ', artistId: 81, genreId: 2 },
  /* 17 */ { title: 'ミライボウル', artistId: 3, genreId: 2 },
  /* 18 */ { title: 'milk', artistId: 14, genreId: 4 },
  /* 19 */ { title: 'ビスケット', artistId: 15, genreId: 4 },
  /* 20 */ { title: 'そばかす', artistId: 16, genreId: 1 },
  /* 21 */ { title: 'ネトゲ廃人シュプレヒコール', artistId: 17, genreId: 3 },
  /* 22 */ { title: '前略､道の上より', artistId: 18, genreId: 4 },
  /* 23 */ { title: 'Trickster', artistId: 19, genreId: 4 },
  /* 24 */ { title: '続く世界', artistId: 5, genreId: 1 },
  /* 25 */ { title: '透明人間', artistId: 20, genreId: 9 },
  /* 26 */ { title: 'ステキな日曜日〜Gyu Gyu グッデイ!〜', artistId: 21, genreId: 4 },
  /* 27 */ { title: 'Give a reason', artistId: 22, genreId: 1 },
  /* 28 */ { title: 'フライングゲット', artistId: 23, genreId: 2 },
  /* 29 */ { title: '片想いFinally', artistId: 24, genreId: 2 },
  /* 30 */ { title: '風吹けば恋', artistId: 25, genreId: 4 },
  /* 31 */ { title: '気まぐれロマンティック', artistId: 26, genreId: 4 },
  /* 32 */ { title: 'シュガーソングとビターステップ', artistId: 27, genreId: 1 },
  /* 33 */ { title: 'GOLD', artistId: 28, genreId: 9 },
  /* 34 */ { title: 'シャボン玉', artistId: 29, genreId: 2 },
  /* 35 */ { title: 'AIAIAI', artistId: 30, genreId: 0 },
  /* 36 */ { title: 'PONPONPON', artistId: 31, genreId: 6 },
  /* 37 */ { title: '君の知らない物語', artistId: 32, genreId: 1 },
  /* 38 */ { title: 'M@STERPIECE', artistId: 33, genreId: 7 },
  /* 39 */ { title: 'Hello, Worker', artistId: 34, genreId: 3 },
  /* 40 */ { title: '風になる', artistId: 35, genreId: 4 },
  /* 41 */ { title: 'サウダージ', artistId: 36, genreId: 4 },
  /* 42 */ { title: 'サボテン', artistId: 36, genreId: 4 },
  /* 43 */ { title: '新宝島', artistId: 37, genreId: 9 },
  /* 44 */ { title: 'I WISH', artistId: 29, genreId: 2 },
  /* 45 */ { title: 'カブトムシ', artistId: 14, genreId: 4 },
  /* 46 */ { title: 'CHE.R.RY', artistId: 38, genreId: 4 },
  /* 47 */ { title: 'やさしいキスをして', artistId: 39, genreId: 4 },
  /* 48 */ { title: 'コノユビトマレ', artistId: 40, genreId: 4 },
  /* 49 */ { title: 'だから僕は音楽を辞めた', artistId: 41, genreId: 9 },
  /* 50 */ { title: 'NO,Thank You!', artistId: 2, genreId: 1 },
  /* 51 */ { title: 'Listen!!', artistId: 2, genreId: 1 },
  /* 52 */ { title: 'ノーザンクロス', artistId: 42, genreId: 1 },
  /* 53 */ { title: 'からくりピエロ', artistId: 43, genreId: 3 },
  /* 54 */ { title: '二息歩行', artistId: 44, genreId: 3 },
  /* 55 */ { title: 'トリノコシティ', artistId: 43, genreId: 3 },
  /* 56 */ { title: 'キリトリセン', artistId: 43, genreId: 3 },
  /* 57 */ { title: 'ハナミズキ', artistId: 45, genreId: 4 },
  /* 58 */ { title: 'Raining', artistId: 46, genreId: 4 },
  /* 59 */ { title: '雲路の果て', artistId: 46, genreId: 4 },
  /* 60 */ { title: '車輪の唄', artistId: 47, genreId: 4 },
  /* 61 */ { title: '風になりたい', artistId: 48, genreId: 4 },
  /* 62 */ { title: '未来予想図II', artistId: 39, genreId: 4 },
  /* 63 */ { title: '黄昏ロマンス', artistId: 36, genreId: 4 },
  /* 64 */ { title: '幸せについて本気出して考えてみた', artistId: 36, genreId: 4 },
  /* 65 */ { title: '雲は白リンゴは赤', artistId: 14, genreId: 4 },
  /* 66 */ { title: '女子カ←パラダイス', artistId: 49, genreId: 2 },
  /* 67 */ { title: 'Mr.Moonlight 〜愛のビッグバンド〜', artistId: 29, genreId: 2 },
  /* 68 */ { title: '走れ!', artistId: 3, genreId: 2 },
  /* 69 */ { title: 'オレンジノート', artistId: 81, genreId: 2 },
  /* 70 */ { title: '行くぜっ！怪盗少女', artistId: 3, genreId: 2 },
  /* 71 */ { title: 'ピンキージョーンズ', artistId: 3, genreId: 2 },
  /* 72 */ { title: 'Z伝説 〜終わりなき革命〜', artistId: 81, genreId: 2 },
  /* 73 */ { title: 'PUSH', artistId: 81, genreId: 2 },
  /* 74 */ { title: '君の街まで', artistId: 50, genreId: 9 },
  /* 75 */ { title: '君という花', artistId: 50, genreId: 9 },
  /* 76 */ { title: 'ごはんはおかず', artistId: 2, genreId: 1 },
  /* 77 */ { title: 'ふわふわ時間', artistId: 64, genreId: 1 },
  /* 78 */ { title: 'ハッピーサマーウェディング', artistId: 29, genreId: 2 },
  /* 79 */ { title: '星間飛行', artistId: 51, genreId: 1 },
  /* 80 */ { title: 'ロミオとシンデレラ', artistId: 52, genreId: 3 },
  /* 81 */ { title: 'ぴゅあぴゅあはーと', artistId: 2, genreId: 1 },
  /* 82 */ { title: 'もってけ!セーラーふく', artistId: 53, genreId: 1 },
  /* 83 */ { title: 'コネクト', artistId: 54, genreId: 1 },
  /* 84 */ { title: 'Snow halation', artistId: 55, genreId: 1 },
  /* 85 */ { title: '創聖のアクエリオン', artistId: 56, genreId: 1 },
  /* 86 */ { title: 'ETERNAL BLAZE', artistId: 19, genreId: 1 },
  /* 87 */ { title: 'Rising Hope', artistId: 57, genreId: 1 },
  /* 88 */ { title: 'ブルーバード', artistId: 26, genreId: 1 },
  /* 89 */ { title: 'BLUE BIRD', artistId: 58, genreId: 4 },
  /* 90 */ { title: 'カナシミ ブルー', artistId: 59, genreId: 4 },
  /* 91 */ { title: '群青日和', artistId: 20, genreId: 9 },
  /* 92 */ { title: 'トライアングラー', artistId: 60, genreId: 1 },
  /* 93 */ { title: '真夏のSounds good !', artistId: 23, genreId: 2 },
  /* 94 */ { title: '本気ボンバー!!', artistId: 61, genreId: 1 },
  /* 95 */ { title: 'ココ☆ナツ', artistId: 3, genreId: 2 },
  /* 96 */ { title: 'LOVEマシーン', artistId: 29, genreId: 2 },
  /* 97 */ { title: 'マルシェ', artistId: 62, genreId: 10 },
  /* 98 */ { title: 'Real Face', artistId: 63, genreId: 4 },
  /* 99 */ { title: 'Don\'t say "lazy"', artistId: 64, genreId: 1 },
  /* 100 */ { title: '丸の内サディスティック', artistId: 65, genreId: 4 },
  /* 101 */ { title: '遭難', artistId: 20, genreId: 4 },
  /* 102 */ { title: 'バビロン', artistId: 66, genreId: 3 },
  /* 103 */ { title: '浮世CROSSING', artistId: 28, genreId: 9 },
  /* 104 */ { title: 'READY STEADY GO', artistId: 67, genreId: 1 },
  /* 105 */ { title: '溺愛ロジック', artistId: 68, genreId: 4 },
  /* 106 */ { title: 'The Rainbow Star', artistId: 69, genreId: 4 },
  /* 107 */ { title: 'ネオメロドラマティック', artistId: 36, genreId: 4 },
  /* 108 */ { title: 'ミュージック・アワー', artistId: 36, genreId: 4 },
  /* 109 */ { title: '上海ハニー', artistId: 70, genreId: 4 },
  /* 110 */ { title: 'EZ DO DANCE', artistId: 71, genreId: 4 },
  /* 111 */ { title: 'オリオンをなぞる', artistId: 27, genreId: 1 },
  /* 112 */ { title: 'カゲロウデイズ', artistId: 72, genreId: 3 },
  /* 113 */ { title: 'GO!!!', artistId: 73, genreId: 9 },
  /* 114 */ { title: 'え？あぁ、そう。', artistId: 74, genreId: 3 },
  /* 115 */ { title: '夢見る少女じゃいられない', artistId: 75, genreId: 4 },
  /* 116 */ { title: 'やさしさに包まれたなら', artistId: 12, genreId: 4 },
  /* 117 */ { title: 'ルージュの伝言', artistId: 12, genreId: 4 },
  /* 118 */ { title: 'brave heart', artistId: 22, genreId: 1 },
  /* 119 */ { title: '残酷な天使のテーゼ', artistId: 76, genreId: 1 },
  /* 120 */ { title: 'Winter Bells', artistId: 77, genreId: 4 },
  /* 121 */ { title: 'Secret of my heart', artistId: 77, genreId: 4 },
  /* 122 */ { title: '深い森', artistId: 78, genreId: 4 },
  /* 123 */ { title: 'ライオン', artistId: 79, genreId: 1 },
  /* 124 */ { title: 'secret base 〜君がくれたもの〜', artistId: 80, genreId: 1 },
  /* 125 */ { title: '真夜中は純潔', artistId: 65, genreId: 4 },
  /* 126 */ { title: 'Signalize!', artistId: 82, genreId: 11 },
  /* 127 */ { title: '硝子ドール', artistId: 82, genreId: 11 },
  /* 128 */ { title: 'Growing for a dream', artistId: 82, genreId: 11 },
  /* 129 */ { title: 'ダイヤモンドハッピー', artistId: 82, genreId: 11 },
  /* 130 */ { title: 'Take Me Higher', artistId: 82, genreId: 11 },
  /* 131 */ { title: 'Angel Snow', artistId: 82, genreId: 11 },
  /* 132 */ { title: 'ヒラリ／ヒトリ／キラリ', artistId: 82, genreId: 11 },
  /* 133 */ { title: 'Moonlight destiny', artistId: 82, genreId: 11 },
  /* 134 */ { title: 'カレンダーガール', artistId: 82, genreId: 11 },
  /* 135 */ { title: 'アイドル活動!', artistId: 82, genreId: 11 },
  /* 136 */ { title: 'ハム太郎とっとこうた', artistId: 83, genreId: 1 },
  /* 137 */ { title: 'POP STAR', artistId: 84, genreId: 4 },
  /* 138 */ { title: '気分上々↑↑', artistId: 85, genreId: 4 },
  /* 139 */ { title: 'マスターピース', artistId: 85, genreId: 1 },
  /* 140 */ { title: '恋', artistId: 86, genreId: 4 },
  /* 141 */ { title: 'アンドロメダ', artistId: 14, genreId: 4 },
  /* 142 */ { title: '裏表ラバーズ', artistId: 87, genreId: 3 },
  /* 143 */ { title: 'Believe', artistId: 88, genreId: 4 },
  /* 144 */ { title: 'TRAIN-TRAIN', artistId: 89, genreId: 9 },
  /* 145 */ { title: '悲しみをやさしさに', artistId: 90, genreId: 1 },
  /* 146 */ { title: 'ラヴァーズ', artistId: 91, genreId: 1 },
  /* 147 */ { title: '初音ミクの消失', artistId: 92, genreId: 3 },
  /* 148 */ { title: 'バラライカ', artistId: 93, genreId: 1 },
  /* 149 */ { title: 'パパンケーキ', artistId: 93, genreId: 1 },
  /* 150 */ { title: 'ラフ・メイカー', artistId: 47, genreId: 4 },
  /* 151 */ { title: '小さな恋のうた', artistId: 94, genreId: 9 },
  /* 152 */ { title: 'God knows...', artistId: 95, genreId: 1 },
  /* 153 */ { title: 'Northern lights', artistId: 22, genreId: 1 },
  /* 154 */ { title: 'Over Soul', artistId: 22, genreId: 1 },
  /* 155 */ { title: 'U&I', artistId: 2, genreId: 1 },
  /* 156 */ { title: '天使にふれたよ!', artistId: 2, genreId: 1 },
  /* 157 */ { title: 'ルミナス', artistId: 54, genreId: 1 },
  /* 158 */ { title: 'ヒトリノ夜', artistId: 36, genreId: 1 },
  /* 159 */ { title: 'さぷらいずぱらだいす！', artistId: 96, genreId: 0 },
  /* 160 */ { title: 'SKILL', artistId: 97, genreId: 5 },
  /* 161 */ { title: 'Rolling star', artistId: 38, genreId: 1 },
  /* 162 */ { title: '脳漿炸裂ガール', artistId: 98, genreId: 3 },
  /* 163 */ { title: '太陽曰く燃えよカオス', artistId: 99, genreId: 1 },
  /* 164 */ { title: '魂のルフラン', artistId: 76, genreId: 1 },
  /* 165 */ { title: 'DANZEN! ふたりはプリキュア', artistId: 100, genreId: 1 },
  /* 166 */ { title: 'モーニングコーヒー', artistId: 29, genreId: 2 },
  /* 167 */ { title: 'Memory 青春の光', artistId: 29, genreId: 2 },
  /* 168 */ { title: '抱いてHOLD ON ME!', artistId: 29, genreId: 2 },
  /* 169 */ { title: '長い夢', artistId: 15, genreId: 4 },
  /* 170 */ { title: 'ローリンガール', artistId: 87, genreId: 3 },
  /* 171 */ { title: 'スノースマイル', artistId: 47, genreId: 4 },
  /* 172 */ { title: 'オンリー ロンリー グローリー', artistId: 47, genreId: 4 },
  /* 173 */ { title: 'アルエ', artistId: 47, genreId: 4 },
  /* 174 */ { title: 'K', artistId: 47, genreId: 4 },
  /* 175 */ { title: 'ランプ', artistId: 47, genreId: 4 },
  /* 176 */ { title: '黒毛和牛上塩タン焼680円', artistId: 101, genreId: 1 },
  /* 177 */ { title: 'キラキラ', artistId: 14, genreId: 4 },
  /* 178 */ { title: 'メランコリック', artistId: 102, genreId: 3 },
  /* 179 */ { title: 'にんじゃりばんばん', artistId: 31, genreId: 6 },
  /* 180 */ { title: 'インベーダーインベーダー', artistId: 31, genreId: 6 },
  /* 181 */ { title: 'ポリリズム', artistId: 103, genreId: 6 },
  /* 182 */ { title: 'ワンルーム・ディスコ', artistId: 103, genreId: 6 },
  /* 183 */ { title: 'チョコレイト・ディスコ', artistId: 103, genreId: 6 },
  /* 184 */ { title: 'ナチュラルに恋して', artistId: 103, genreId: 6 },
  /* 185 */ { title: '不自然なガール', artistId: 103, genreId: 6 },
  /* 186 */ { title: 'COLORS', artistId: 104, genreId: 4 },
  /* 187 */ { title: 'Beautiful World', artistId: 104, genreId: 1 },
  /* 188 */ { title: 'かもめが翔んだ日', artistId: 105, genreId: 4 },
  /* 189 */ { title: '十面相', artistId: 106, genreId: 3 },
  /* 190 */ { title: 'BOY MEETS GIRL', artistId: 107, genreId: 1 },
  /* 191 */ { title: 'キミだけのプリンセス', artistId: 108, genreId: 5 },
  /* 192 */ { title: '紅蓮華', artistId: 57, genreId: 1 },
  /* 193 */ { title: 'モザイクロール', artistId: 44, genreId: 3 },
  /* 194 */ { title: 'SNOW! SNOW! SNOW!', artistId: 59, genreId: 4 },
  /* 195 */ { title: '愛のかたまり', artistId: 59, genreId: 4 },
  /* 196 */ { title: 'うれしい！たのしい！大好き！', artistId: 39, genreId: 4 },
  /* 197 */ { title: '結ンデ開イテ羅刹ト骸', artistId: 109, genreId: 3 },
  /* 198 */ { title: 'シザーハンズ', artistId: 110, genreId: 3 },
  /* 199 */ { title: '天ノ弱', artistId: 111, genreId: 3 },
  /* 200 */ { title: 'Just Be Friends', artistId: 112, genreId: 3 },
  /* 201 */ { title: 'ココロオドル', artistId: 113, genreId: 1 },
  /* 202 */ { title: '狂乱戦記 ～日常ノ神サマ～', artistId: 114, genreId: 1 },
  /* 203 */ { title: 'Gamble Rumble', artistId: 115, genreId: 1 },
  /* 204 */ { title: 'お願い!セニョリータ', artistId: 70, genreId: 4 },
  /* 205 */ { title: 'チャンカパーナ', artistId: 116, genreId: 4 },
  /* 206 */ { title: 'セロリ', artistId: 117, genreId: 4 },
  /* 207 */ { title: 'さわって・変わって', artistId: 118, genreId: 9 },
  /* 208 */ { title: 'ダンデライオン', artistId: 47, genreId: 4 },
  /* 209 */ { title: 'リモコン', artistId: 119, genreId: 3 },
  /* 210 */ { title: '徒花ネクロマンシー', artistId: 120, genreId: 1 },
  /* 211 */ { title: '強い気持ち・強い愛', artistId: 121, genreId: 4 },
  /* 212 */ { title: '檸檬色', artistId: 122, genreId: 2 },
  /* 213 */ { title: 'ダンス ダンス ダンス', artistId: 122, genreId: 2 },
  /* 214 */ { title: 'Hey! みんな元気かい?', artistId: 59, genreId: 4 },
  /* 215 */ { title: '寒い夜だから…', artistId: 71, genreId: 4 },
  /* 216 */ { title: 'CRAZY GONNA CRAZY', artistId: 71, genreId: 4 },
  /* 217 */ { title: 'masquerade', artistId: 71, genreId: 4 },
  /* 218 */ { title: 'Fly Me to the Star', artistId: 123, genreId: 1 },
  /* 219 */ { title: 'くちづけキボンヌ', artistId: 122, genreId: 2 },
  /* 220 */ { title: 'イロドリセカイ', artistId: 122, genreId: 2 },
  /* 221 */ { title: 'あした地球がこなごなになっても', artistId: 122, genreId: 2 },
  /* 222 */ { title: 'ねこ日記', artistId: 51, genreId: 1 },
  /* 223 */ { title: '蒼のエーテル', artistId: 51, genreId: 1 },
  /* 224 */ { title: 'What \'bout my star?', artistId: 42, genreId: 1 },
  /* 225 */ { title: 'ダイアモンド クレバス', artistId: 42, genreId: 1 },
  /* 226 */ { title: 'BLUE CLAPPER', artistId: 124, genreId: 0 },
  /* 227 */ { title: '炉心融解', artistId: 125, genreId: 3 },
  /* 228 */ { title: 'クリスマス・イブRap', artistId: 62, genreId: 10 },
  /* 229 */ { title: 'Driver\'s High', artistId: 67, genreId: 9 },
  /* 230 */ { title: '週末Not yet', artistId: 126, genreId: 2 },
  /* 231 */ { title: '波乗りかき氷', artistId: 126, genreId: 2 },
  /* 232 */ { title: 'It Takes Two', artistId: 127, genreId: 4 },
  /* 233 */ { title: '焼け野が原', artistId: 46, genreId: 4 },
  /* 234 */ { title: '島人ぬ宝', artistId: 128, genreId: 4 },
  /* 235 */ { title: 'Dream Fighter', artistId: 103, genreId: 6 },
  /* 236 */ { title: '575', artistId: 103, genreId: 6 },
  /* 237 */ { title: 'ねぇ', artistId: 103, genreId: 6 },
  /* 238 */ { title: '夏祭り', artistId: 129, genreId: 4 },
  /* 239 */ { title: '夏色えがおで1,2,Jump!', artistId: 55, genreId: 1 },
  /* 240 */ { title: '射手座☆午後九時Don\'t be late', artistId: 42, genreId: 1 },
  /* 241 */ { title: '生きてこそ', artistId: 130, genreId: 4 },
  /* 242 */ { title: '月のワルツ', artistId: 131, genreId: 4 },
  /* 243 */ { title: 'Zzz', artistId: 132, genreId: 1 },
  /* 244 */ { title: '輝夜の城で踊りたい', artistId: 55, genreId: 1 },
  /* 245 */ { title: 'イドラのサーカス', artistId: 133, genreId: 3 },
  /* 246 */ { title: 'ブリキノダンス', artistId: 134, genreId: 3 },
]

export const genres: Genre[] = [
  /*  0 */ { name: 'VTuber' },
  /*  1 */ { name: 'アニメ' },
  /*  2 */ { name: 'アイドル' },
  /*  3 */ { name: 'ボーカロイド' },
  /*  4 */ { name: 'J-POP' },
  /*  5 */ { name: 'ゲーム' },
  /*  6 */ { name: 'エレクトロニック' },
  /*  7 */ { name: 'アイドルマスター' },
  /*  8 */ { name: '合唱曲' },
  /*  9 */ { name: 'ロック' },
  /* 10 */ { name: 'ヒップホップ' },
  /* 11 */ { name: 'アイカツ！' },
]

export const artists: Artist[] = [
  /*  0 */ { name: '尾丸ポルカ' },
  /*  1 */ { name: 'fripSide' },
  /*  2 */ { name: '放課後ティータイム' },
  /*  3 */ { name: 'ももいろクローバー' },
  /*  4 */ { name: 'MAHO堂' },
  /*  5 */ { name: '中川翔子' },
  /*  6 */ { name: 'どうぶつビスケッツ×PPP' },
  /*  7 */ { name: 'ゴジマジP' },
  /*  8 */ { name: '平田志穂子' },
  /*  9 */ { name: 'Yunomi' },
  /* 10 */ { name: 'LiPPS' },
  /* 11 */ { name: '中島みゆき' },
  /* 12 */ { name: '荒井由実' },
  /* 13 */ { name: '戸松遥' },
  /* 14 */ { name: 'aiko' },
  /* 15 */ { name: 'YUKI' },
  /* 16 */ { name: 'JUDY AND MARY' },
  /* 17 */ { name: 'さつきがてんこもり' },
  /* 18 */ { name: '一世風靡セピア' },
  /* 19 */ { name: '水樹奈々' },
  /* 20 */ { name: '東京事変' },
  /* 21 */ { name: '芦田愛菜' },
  /* 22 */ { name: '林原めぐみ' },
  /* 23 */ { name: 'AKB48' },
  /* 24 */ { name: 'SKE48' },
  /* 25 */ { name: 'チャットモンチー' },
  /* 26 */ { name: 'いきものがかり' },
  /* 27 */ { name: 'UNISON SQUARE GARDEN' },
  /* 28 */ { name: 'UVERworld' },
  /* 29 */ { name: 'モーニング娘。' },
  /* 30 */ { name: 'キズナアイ' },
  /* 31 */ { name: 'きゃりーぱみゅぱみゅ' },
  /* 32 */ { name: 'supercell' },
  /* 33 */ { name: '765PRO ALLSTARS' },
  /* 34 */ { name: 'KEI' },
  /* 35 */ { name: 'つじあやの' },
  /* 36 */ { name: 'ポルノグラフティ' },
  /* 37 */ { name: 'サカナクション' },
  /* 38 */ { name: 'YUI' },
  /* 39 */ { name: 'DREAMS COME TRUE' },
  /* 40 */ { name: 'スガシカオ' },
  /* 41 */ { name: 'ヨルシカ' },
  /* 42 */ { name: 'シェリル・ノーム starring May\'n' },
  /* 43 */ { name: '40㍍P' },
  /* 44 */ { name: 'DECO*27' },
  /* 45 */ { name: '一青窈' },
  /* 46 */ { name: 'Cocco' },
  /* 47 */ { name: 'BUMP OF CHICKEN' },
  /* 48 */ { name: 'THE BOOM' },
  /* 49 */ { name: 'SUPER☆GiRLS' },
  /* 50 */ { name: 'ASIAN KUNG-FU GENERATION' },
  /* 51 */ { name: 'ランカ・リー=中島愛' },
  /* 52 */ { name: 'doriko' },
  /* 53 */ { name: '泉こなた, 柊かがみ, 柊つかさ, 高良みゆき' },
  /* 54 */ { name: 'ClariS' },
  /* 55 */ { name: 'μ\'s' },
  /* 56 */ { name: 'AKINO from bless4' },
  /* 57 */ { name: 'LiSA' },
  /* 58 */ { name: '浜崎あゆみ' },
  /* 59 */ { name: 'KinKi Kids' },
  /* 60 */ { name: '坂本真綾' },
  /* 61 */ { name: 'Berryz工房' },
  /* 62 */ { name: 'KICK THE CAN CREW' },
  /* 63 */ { name: 'KAT-TUN' },
  /* 64 */ { name: '桜高軽音部' },
  /* 65 */ { name: '椎名林檎' },
  /* 66 */ { name: 'トーマ' },
  /* 67 */ { name: 'L\'Arc〜en〜Ciel' },
  /* 68 */ { name: '堂本剛' },
  /* 69 */ { name: 'ENDLICHERI☆ENDLICHERI' },
  /* 70 */ { name: 'ORANGE RANGE' },
  /* 71 */ { name: 'TRF' },
  /* 72 */ { name: 'じん' },
  /* 73 */ { name: 'FLOW' },
  /* 74 */ { name: '蝶々P' },
  /* 75 */ { name: '相川七瀬' },
  /* 76 */ { name: '高橋洋子' },
  /* 77 */ { name: '倉木麻衣' },
  /* 78 */ { name: 'Do As Infinity' },
  /* 79 */ { name: 'シェリル・ノーム starring May\'n／ランカ・リー＝中島 愛' },
  /* 80 */ { name: 'ZONE' },
  /* 81 */ { name: 'ももいろクローバーZ' },
  /* 82 */ { name: 'STAR☆ANIS' },
  /* 83 */ { name: 'ハムちゃんず' },
  /* 84 */ { name: '平井堅' },
  /* 85 */ { name: 'mihimaru GT' },
  /* 86 */ { name: '星野源' },
  /* 87 */ { name: 'wowaka' },
  /* 88 */ { name: 'Folder5' },
  /* 89 */ { name: 'THE BLUE HEARTS' },
  /* 90 */ { name: 'little by little' },
  /* 91 */ { name: '7!!' },
  /* 92 */ { name: 'cosMo@暴走P' },
  /* 93 */ { name: '月島きらり starring 久住小春 (モーニング娘。)' },
  /* 94 */ { name: 'MONGOL800' },
  /* 95 */ { name: '平野綾' },
  /* 96 */ { name: 'どっきりラビリンス' },
  /* 97 */ { name: 'JAM Project' },
  /* 98 */ { name: 'れるりり' },
  /* 99 */ { name: '後ろから這いより隊G' },
  /* 100 */ { name: '五條真由美' },
  /* 101 */ { name: '大塚愛' },
  /* 102 */ { name: 'Junky' },
  /* 103 */ { name: 'Perfume' },
  /* 104 */ { name: '宇多田ヒカル' },
  /* 105 */ { name: '渡辺真知子' },
  /* 106 */ { name: 'YM' },
  /* 107 */ { name: 'Prizmmy☆' },
  /* 108 */ { name: 'AZKi・尾丸ポルカ' },
  /* 109 */ { name: 'ハチ' },
  /* 110 */ { name: 'Nem' },
  /* 111 */ { name: '164' },
  /* 112 */ { name: 'Dixie Flatline' },
  /* 113 */ { name: 'nobodyknows+' },
  /* 114 */ { name: '乱崎凶華(藤村歩)' },
  /* 115 */ { name: 'm.o.v.e' },
  /* 116 */ { name: 'NEWS' },
  /* 117 */ { name: 'SMAP' },
  /* 118 */ { name: 'スピッツ' },
  /* 119 */ { name: 'じーざすP' },
  /* 120 */ { name: 'フランシュシュ' },
  /* 121 */ { name: '小沢健二' },
  /* 122 */ { name: 'でんぱ組.inc' },
  /* 123 */ { name: 'スタァライト九九組' },
  /* 124 */ { name: 'hololive IDOL PROJECT' },
  /* 125 */ { name: 'iroha' },
  /* 126 */ { name: 'Not yet' },
  /* 127 */ { name: 'CHEMISTRY' },
  /* 128 */ { name: 'BEGIN' },
  /* 129 */ { name: 'JITTERIN\'JINN' },
  /* 130 */ { name: 'Kiroro' },
  /* 131 */ { name: '諫山実生' },
  /* 132 */ { name: '佐咲紗花' },
  /* 133 */ { name: 'Neru' },
  /* 134 */ { name: '日向電工' },
]

class Iota {
  static count = 0;
  static get() {
    return this.count++;
  }
}

// 時系列順に登録？
export const singings: Singing[] = [
  new Singing(Iota.get(), 1, 0, 0, true, false),
  new Singing(Iota.get(), 2, 7, 0, true, false),
  new Singing(Iota.get(), 0, 0, 272, true, false),
  new Singing(Iota.get(), 0, 1, 377),
  new Singing(Iota.get(), 0, 2, 774),
  new Singing(Iota.get(), 0, 3, 1064),
  new Singing(Iota.get(), 0, 4, 1410),
  new Singing(Iota.get(), 0, 5, 1755),
  new Singing(Iota.get(), 0, 6, 2167),
  new Singing(Iota.get(), 3, 8, 35, false, false),
  new Singing(Iota.get(), 4, 9, 0, false, false),
  new Singing(Iota.get(), 6, 11, 2206),
  new Singing(Iota.get(), 6, 12, 2668),
  new Singing(Iota.get(), 6, 13, 3266),
  new Singing(Iota.get(), 5, 10, 3, false, false),
  new Singing(Iota.get(), 7, 14, 408),
  new Singing(Iota.get(), 7, 15, 653),
  new Singing(Iota.get(), 7, 16, 1089),
  new Singing(Iota.get(), 7, 17, 1390),
  new Singing(Iota.get(), 7, 18, 1762),
  new Singing(Iota.get(), 7, 19, 2023),
  new Singing(Iota.get(), 7, 20, 2346),
  new Singing(Iota.get(), 7, 21, 2747),
  new Singing(Iota.get(), 7, 22, 3045),
  new Singing(Iota.get(), 7, 23, 3726),
  new Singing(Iota.get(), 7, 24, 3967),
  new Singing(Iota.get(), 7, 25, 4252),
  new Singing(Iota.get(), 7, 26, 4592),
  new Singing(Iota.get(), 7, 27, 4888),
  new Singing(Iota.get(), 7, 28, 5147),
  new Singing(Iota.get(), 7, 29, 5415),
  new Singing(Iota.get(), 7, 30, 5811),
  new Singing(Iota.get(), 7, 31, 6044),
  new Singing(Iota.get(), 7, 32, 6390),
  new Singing(Iota.get(), 7, 33, 6642),
  new Singing(Iota.get(), 7, 34, 6920),
  new Singing(Iota.get(), 7, 35, 7161),
  new Singing(Iota.get(), 7, 36, 7274),
  new Singing(Iota.get(), 7, 37, 7564),
  new Singing(Iota.get(), 7, 38, 7995),
  new Singing(Iota.get(), 8, 39, 230, false, true),
  new Singing(Iota.get(), 8, 40, 528),
  new Singing(Iota.get(), 8, 41, 829),
  new Singing(Iota.get(), 8, 42, 1150),
  new Singing(Iota.get(), 8, 43, 1452),
  new Singing(Iota.get(), 8, 44, 1762),
  new Singing(Iota.get(), 8, 45, 2116),
  new Singing(Iota.get(), 8, 46, 2441),
  new Singing(Iota.get(), 8, 47, 2664),
  new Singing(Iota.get(), 8, 48, 2894),
  new Singing(Iota.get(), 8, 49, 3204),
  new Singing(Iota.get(), 8, 50, 3512),
  new Singing(Iota.get(), 8, 51, 3772),
  new Singing(Iota.get(), 8, 52, 4006),
  new Singing(Iota.get(), 8, 53, 4334),
  new Singing(Iota.get(), 8, 54, 4628),
  new Singing(Iota.get(), 8, 55, 4813),
  new Singing(Iota.get(), 8, 56, 5035),
  new Singing(Iota.get(), 8, 57, 5287),
  new Singing(Iota.get(), 8, 58, 5633),
  new Singing(Iota.get(), 8, 59, 5947),
  new Singing(Iota.get(), 8, 60, 6293),
  new Singing(Iota.get(), 8, 61, 6566),
  new Singing(Iota.get(), 8, 62, 6809),
  new Singing(Iota.get(), 8, 63, 7287),
  new Singing(Iota.get(), 8, 64, 7595),
  new Singing(Iota.get(), 8, 65, 7889),
  new Singing(Iota.get(), 8, 66, 8142),
  new Singing(Iota.get(), 8, 67, 8415),
  new Singing(Iota.get(), 8, 68, 8727),
  new Singing(Iota.get(), 8, 69, 9050, true, false),
  new Singing(Iota.get(), 8, 70, 9190),
  new Singing(Iota.get(), 8, 71, 9448),
  new Singing(Iota.get(), 8, 72, 9752),
  new Singing(Iota.get(), 8, 73, 10197),
  new Singing(Iota.get(), 8, 74, 10514),
  new Singing(Iota.get(), 8, 75, 10735),
  new Singing(Iota.get(), 8, 76, 11105),
  new Singing(Iota.get(), 8, 77, 11295),
  new Singing(Iota.get(), 16, 51, 7028),
  new Singing(Iota.get(), 16, 0, 7253, true, false),
  new Singing(Iota.get(), 9, 2, 172),
  new Singing(Iota.get(), 9, 78, 406),
  new Singing(Iota.get(), 9, 79, 687),
  new Singing(Iota.get(), 9, 80, 938),
  new Singing(Iota.get(), 9, 81, 1241),
  new Singing(Iota.get(), 9, 82, 1548),
  new Singing(Iota.get(), 9, 83, 1833),
  new Singing(Iota.get(), 9, 84, 2130),
  new Singing(Iota.get(), 9, 85, 2376),
  new Singing(Iota.get(), 10, 86, 151),
  new Singing(Iota.get(), 10, 87, 460),
  new Singing(Iota.get(), 10, 88, 701),
  new Singing(Iota.get(), 10, 89, 919),
  new Singing(Iota.get(), 10, 90, 1160),
  new Singing(Iota.get(), 10, 91, 1454),
  new Singing(Iota.get(), 10, 92, 1676),
  new Singing(Iota.get(), 10, 93, 1955),
  new Singing(Iota.get(), 10, 94, 2224),
  new Singing(Iota.get(), 10, 95, 2420),
  new Singing(Iota.get(), 10, 96, 2720),
  new Singing(Iota.get(), 10, 6, 3148),
  new Singing(Iota.get(), 11, 97, 94),
  new Singing(Iota.get(), 11, 98, 310),
  new Singing(Iota.get(), 11, 99, 638),
  new Singing(Iota.get(), 11, 100, 900),
  new Singing(Iota.get(), 11, 125, 1122),
  new Singing(Iota.get(), 11, 101, 1377),
  new Singing(Iota.get(), 11, 102, 1570),
  new Singing(Iota.get(), 11, 103, 1958),
  new Singing(Iota.get(), 11, 104, 2215),
  new Singing(Iota.get(), 11, 105, 2439),
  new Singing(Iota.get(), 11, 106, 2700),
  new Singing(Iota.get(), 11, 107, 3002),
  new Singing(Iota.get(), 11, 108, 3267),
  new Singing(Iota.get(), 11, 33, 3541),
  new Singing(Iota.get(), 11, 109, 3792),
  new Singing(Iota.get(), 11, 110, 3970),
  new Singing(Iota.get(), 11, 111, 4248),
  new Singing(Iota.get(), 11, 112, 4507),
  new Singing(Iota.get(), 11, 113, 4742),
  new Singing(Iota.get(), 11, 100, 5085),
  new Singing(Iota.get(), 11, 114, 5309),
  new Singing(Iota.get(), 11, 115, 5512),
  new Singing(Iota.get(), 11, 116, 5771),
  new Singing(Iota.get(), 11, 117, 5959),
  new Singing(Iota.get(), 11, 118, 6136),
  new Singing(Iota.get(), 11, 119, 6383),
  new Singing(Iota.get(), 11, 120, 6649),
  new Singing(Iota.get(), 11, 121, 6980),
  new Singing(Iota.get(), 11, 122, 7235),
  new Singing(Iota.get(), 11, 40, 7476),
  new Singing(Iota.get(), 11, 123, 7737),
  new Singing(Iota.get(), 11, 92, 8033),
  new Singing(Iota.get(), 11, 124, 8310),
  new Singing(Iota.get(), 11, 37, 8622),
  new Singing(Iota.get(), 11, 85, 9050),
  new Singing(Iota.get(), 12, 126, 605, false, false),
  new Singing(Iota.get(), 12, 127, 1020, false, false),
  new Singing(Iota.get(), 12, 128, 1915, false, false),
  new Singing(Iota.get(), 12, 129, 2955, false, false),
  new Singing(Iota.get(), 12, 130, 3192, false, false),
  new Singing(Iota.get(), 12, 131, 3407, false, false),
  new Singing(Iota.get(), 12, 132, 3791, false, false),
  new Singing(Iota.get(), 12, 133, 4828, false, false),
  new Singing(Iota.get(), 12, 134, 5520, false, true),
  new Singing(Iota.get(), 12, 135, 5869, false, false),
  new Singing(Iota.get(), 13, 136, 541, true, false),
  new Singing(Iota.get(), 13, 137, 630),
  new Singing(Iota.get(), 13, 138, 998),
  new Singing(Iota.get(), 13, 139, 1232),
  new Singing(Iota.get(), 13, 158, 1562),
  new Singing(Iota.get(), 13, 140, 1824),
  new Singing(Iota.get(), 13, 141, 2072),
  new Singing(Iota.get(), 13, 142, 2347),
  new Singing(Iota.get(), 13, 143, 2625),
  new Singing(Iota.get(), 13, 144, 2850),
  new Singing(Iota.get(), 13, 145, 3090),
  new Singing(Iota.get(), 13, 146, 3338),
  new Singing(Iota.get(), 13, 147, 3558),
  new Singing(Iota.get(), 13, 148, 3855),
  new Singing(Iota.get(), 13, 149, 4068),
  new Singing(Iota.get(), 13, 150, 4436),
  new Singing(Iota.get(), 13, 151, 4661),
  new Singing(Iota.get(), 13, 152, 4894),
  new Singing(Iota.get(), 13, 153, 5164),
  new Singing(Iota.get(), 13, 154, 5370),
  new Singing(Iota.get(), 13, 155, 5602),
  new Singing(Iota.get(), 13, 156, 5876),
  new Singing(Iota.get(), 13, 157, 6353),
  new Singing(Iota.get(), 13, 83, 6596),
  new Singing(Iota.get(), 14, 159, 0),
  new Singing(Iota.get(), 15, 160, 37),
  new Singing(Iota.get(), 15, 51, 380),
  new Singing(Iota.get(), 15, 99, 603),
  new Singing(Iota.get(), 15, 2, 862),
  new Singing(Iota.get(), 15, 29, 1088),
  new Singing(Iota.get(), 15, 161, 1352),
  new Singing(Iota.get(), 15, 16, 1533),
  new Singing(Iota.get(), 15, 3, 1828),
  new Singing(Iota.get(), 15, 162, 2104),
  new Singing(Iota.get(), 15, 163, 2299),
  new Singing(Iota.get(), 15, 164, 2531),
  new Singing(Iota.get(), 15, 119, 2835),
  new Singing(Iota.get(), 15, 92, 3082),
  new Singing(Iota.get(), 15, 123, 3348),
  new Singing(Iota.get(), 15, 52, 3628),
  new Singing(Iota.get(), 15, 165, 3915),
  new Singing(Iota.get(), 15, 85, 4148),
  new Singing(Iota.get(), 15, 1, 4422),
  new Singing(Iota.get(), 15, 87, 4817),
  new Singing(Iota.get(), 18, 191, 0, true, false),
  new Singing(Iota.get(), 17, 166, 759),
  new Singing(Iota.get(), 17, 167, 1043),
  new Singing(Iota.get(), 17, 168, 1381),
  new Singing(Iota.get(), 17, 169, 1684),
  new Singing(Iota.get(), 17, 170, 2038),
  new Singing(Iota.get(), 17, 25, 2273),
  new Singing(Iota.get(), 17, 171, 2532),
  new Singing(Iota.get(), 17, 172, 2908),
  new Singing(Iota.get(), 17, 173, 3270),
  new Singing(Iota.get(), 17, 174, 3538),
  new Singing(Iota.get(), 17, 175, 3811),
  new Singing(Iota.get(), 17, 60, 4137),
  new Singing(Iota.get(), 17, 176, 4478),
  new Singing(Iota.get(), 17, 177, 4734),
  new Singing(Iota.get(), 17, 18, 5042),
  new Singing(Iota.get(), 17, 65, 5346),
  new Singing(Iota.get(), 17, 178, 5633),
  new Singing(Iota.get(), 17, 179, 5856),
  new Singing(Iota.get(), 17, 180, 6115),
  new Singing(Iota.get(), 17, 181, 6424),
  new Singing(Iota.get(), 17, 182, 6718),
  new Singing(Iota.get(), 17, 183, 7031),
  new Singing(Iota.get(), 17, 184, 7294),
  new Singing(Iota.get(), 17, 185, 7790),
  new Singing(Iota.get(), 17, 84, 8105),
  new Singing(Iota.get(), 17, 32, 8421),
  new Singing(Iota.get(), 17, 186, 8774, true, false),
  new Singing(Iota.get(), 17, 187, 8891),
  new Singing(Iota.get(), 17, 188, 9263),
  new Singing(Iota.get(), 17, 79, 9461),
  new Singing(Iota.get(), 17, 21, 9840),
  new Singing(Iota.get(), 17, 189, 10170),
  new Singing(Iota.get(), 17, 190, 10402),
  new Singing(Iota.get(), 17, 23, 10696),
  new Singing(Iota.get(), 17, 37, 10953),
  new Singing(Iota.get(), 17, 0, 11675, true, false),
  new Singing(Iota.get(), 19, 86, 2346),
  new Singing(Iota.get(), 19, 27, 2677),
  new Singing(Iota.get(), 19, 192, 2936),
  new Singing(Iota.get(), 20, 77, 243),
  new Singing(Iota.get(), 20, 20, 475),
  new Singing(Iota.get(), 20, 54, 729),
  new Singing(Iota.get(), 20, 193, 912),
  new Singing(Iota.get(), 20, 194, 1385),
  new Singing(Iota.get(), 20, 195, 1648),
  new Singing(Iota.get(), 20, 170, 1935),
  new Singing(Iota.get(), 20, 68, 2126),
  new Singing(Iota.get(), 20, 69, 2403),
  new Singing(Iota.get(), 20, 196, 2888),
  new Singing(Iota.get(), 20, 31, 3137),
  new Singing(Iota.get(), 20, 197, 3377),
  new Singing(Iota.get(), 20, 198, 3632),
  new Singing(Iota.get(), 20, 199, 3902),
  new Singing(Iota.get(), 20, 200, 4089),
  new Singing(Iota.get(), 20, 187, 4383),
  new Singing(Iota.get(), 20, 201, 4792),
  new Singing(Iota.get(), 20, 67, 5045),
  new Singing(Iota.get(), 20, 57, 5344),
  new Singing(Iota.get(), 20, 161, 5663),
  new Singing(Iota.get(), 20, 192, 5853),
  new Singing(Iota.get(), 20, 111, 6199),
  new Singing(Iota.get(), 20, 32, 6460),
  new Singing(Iota.get(), 21, 202, 0, false, false),
  new Singing(Iota.get(), 22, 83, 618),
  new Singing(Iota.get(), 22, 157, 880),
  new Singing(Iota.get(), 22, 43, 1303),
  new Singing(Iota.get(), 22, 125, 1604),
  new Singing(Iota.get(), 22, 203, 1881),
  new Singing(Iota.get(), 22, 204, 2192),
  new Singing(Iota.get(), 22, 205, 2437),
  new Singing(Iota.get(), 22, 206, 2703),
  new Singing(Iota.get(), 22, 207, 2950),
  new Singing(Iota.get(), 22, 53, 3183),
  new Singing(Iota.get(), 22, 208, 3441),
  new Singing(Iota.get(), 22, 209, 3653),
  new Singing(Iota.get(), 22, 210, 4199, false, true),
  new Singing(Iota.get(), 22, 211, 4603, false, true),
  new Singing(Iota.get(), 22, 212, 4947, false, true),
  new Singing(Iota.get(), 22, 213, 5215, false, true),
  new Singing(Iota.get(), 22, 214, 5477),
  new Singing(Iota.get(), 22, 215, 5772),
  new Singing(Iota.get(), 22, 190, 6084),
  new Singing(Iota.get(), 22, 216, 6360),
  new Singing(Iota.get(), 22, 110, 6710),
  new Singing(Iota.get(), 22, 217, 6964),
  new Singing(Iota.get(), 22, 218, 7579, false, true),
  new Singing(Iota.get(), 22, 219, 7798, false, true),
  new Singing(Iota.get(), 22, 220, 8107, false, true),
  new Singing(Iota.get(), 22, 221, 8416, false, true),
  new Singing(Iota.get(), 22, 222, 8746, false, true),
  new Singing(Iota.get(), 22, 223, 9031, false, true),
  new Singing(Iota.get(), 22, 224, 9234, false, true),
  new Singing(Iota.get(), 22, 225, 9615, false, true),
  new Singing(Iota.get(), 22, 123, 10001),
  new Singing(Iota.get(), 22, 84, 10296),
  new Singing(Iota.get(), 23, 5, 130),
  new Singing(Iota.get(), 23, 24, 459),
  new Singing(Iota.get(), 23, 23, 802),
  new Singing(Iota.get(), 23, 86, 1048),
  new Singing(Iota.get(), 23, 88, 1475),
  new Singing(Iota.get(), 23, 113, 1725),
  new Singing(Iota.get(), 23, 33, 2045),
  new Singing(Iota.get(), 23, 16, 2457),
  new Singing(Iota.get(), 23, 17, 2764),
  new Singing(Iota.get(), 23, 3, 3035),
  new Singing(Iota.get(), 23, 14, 3617),
  new Singing(Iota.get(), 23, 2, 3922),
  new Singing(Iota.get(), 23, 76, 4160),
  new Singing(Iota.get(), 23, 81, 4346),
  new Singing(Iota.get(), 23, 147, 4874),
  new Singing(Iota.get(), 23, 142, 5158),
  new Singing(Iota.get(), 23, 82, 5389),
  new Singing(Iota.get(), 23, 87, 5886),
  new Singing(Iota.get(), 24, 226, 0, true, false),
  new Singing(Iota.get(), 25, 227, 7017),
  new Singing(Iota.get(), 25, 228, 7349),
  new Singing(Iota.get(), 25, 97, 7703),
  new Singing(Iota.get(), 25, 98, 7941),
  new Singing(Iota.get(), 25, 229, 8280),
  new Singing(Iota.get(), 25, 104, 8517),
  new Singing(Iota.get(), 25, 230, 9063),
  new Singing(Iota.get(), 25, 231, 9362),
  new Singing(Iota.get(), 25, 232, 9629),
  new Singing(Iota.get(), 25, 233, 10439),
  new Singing(Iota.get(), 25, 47, 10720),
  new Singing(Iota.get(), 25, 59, 10942),
  new Singing(Iota.get(), 25, 109, 11267),
  new Singing(Iota.get(), 25, 234, 11462),
  new Singing(Iota.get(), 25, 94, 11775),
  new Singing(Iota.get(), 25, 235, 11993),
  new Singing(Iota.get(), 25, 236, 12435),
  new Singing(Iota.get(), 25, 237, 12720),
  new Singing(Iota.get(), 26, 0, 138),
  new Singing(Iota.get(), 26, 238, 276),
  new Singing(Iota.get(), 26, 239, 579),
  new Singing(Iota.get(), 26, 89, 1054),
  new Singing(Iota.get(), 26, 95, 1283),
  new Singing(Iota.get(), 26, 32, 1533),
  new Singing(Iota.get(), 27, 0, 0),
  new Singing(Iota.get(), 28, 225, 195),
  new Singing(Iota.get(), 28, 240, 535),
  new Singing(Iota.get(), 28, 74, 872),
  new Singing(Iota.get(), 28, 169, 1085),
  new Singing(Iota.get(), 28, 19, 1391),
  new Singing(Iota.get(), 28, 241, 1707),
  new Singing(Iota.get(), 28, 49, 1967),
  new Singing(Iota.get(), 28, 242, 2217),
  new Singing(Iota.get(), 28, 243, 2486),
  new Singing(Iota.get(), 28, 244, 2741),
  new Singing(Iota.get(), 28, 245, 3017),
  new Singing(Iota.get(), 28, 246, 3232),
  new Singing(Iota.get(), 28, 0, 3557),
]

export function getGenres() {
  let genreNames: { name: string, i: number }[] = [];
  genres.forEach((genre, i) => genreNames.push({ name: genre.name, i: i }));
  genreNames = genreNames.sort((a, b) => a.name > b.name ? 1 : -1);
  return genreNames;
}

export function getTypes() {
  let typeNames: { name: string, i: number }[] = [];
  types.forEach((type, i) => {
    if (type.name !== 'その他') {
      typeNames.push({ name: type.name, i: i });
    }
  });
  typeNames = typeNames.sort((a, b) => a.name > b.name ? 1 : -1);
  typeNames.push({ name: 'その他', i: 5 });
  return typeNames;
}

export function getVideos() {
  // データは五十音順になっていないので，ソートしてから選択肢に追加する
  let videoNames: { date: string, title: string, i: number }[] = [];
  videos.forEach((video, i) => videoNames.push({ date: video.date, title: video.title, i: i }));
  videoNames = videoNames.sort((a, b) => {
    if (a.date > b.date) return -1;
    else if (a.date < b.date) return 1;
    else return a.title > b.title ? -1 : 1;
  });
  return videoNames;
}

export function getSongs() {
  let songNames: { title: string, i: number }[] = [];
  songs.forEach((song, i) => songNames.push({ title: song.title, i: i }));
  songNames = songNames.sort((a, b) => a.title > b.title ? 1 : -1);
  return songNames;
}

export function getArtists() {
  let artistNames: { name: string, i: number }[] = [];
  artists.forEach((artist, i) => artistNames.push({ name: artist.name, i: i }));
  artistNames = artistNames.sort((a, b) => a.name > b.name ? 1 : -1);
  return artistNames;
}

export function getUrl(videoId: number) {
  return videos[videoId].id;
}

export function getArtist(songId: number) {
  const artistId = songs[songId].artistId;
  return (artistId === -1 ? '' : artists[artistId].name);
}

export function getArtistId(songId: number) {
  return songs[songId].artistId;
}

export function getSong(songId: number) {
  return songs[songId].title;
}

export function getGenreId(songId: number) {
  return songs[songId].genreId;
}

export function getGenre(songId: number) {
  return genres[songs[songId].genreId].name;
}

export function getTypeId(videoId: number) {
  return videos[videoId].typeId;
}

export function getVideo(videoId: number) {
  return videos[videoId].title;
}